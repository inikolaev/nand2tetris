// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[6..8], a=s0, b=s1, c=s2, d=s3, e=s4, f=s5, g=s6, h=s7);

    And(a=load, b=s0, out=l0);
    RAM64(in=in, load=l0, address=address[0..5], out=r0);

    And(a=load, b=s1, out=l1);
    RAM64(in=in, load=l1, address=address[0..5], out=r1);

    And(a=load, b=s2, out=l2);
    RAM64(in=in, load=l2, address=address[0..5], out=r2);

    And(a=load, b=s3, out=l3);
    RAM64(in=in, load=l3, address=address[0..5], out=r3);

    And(a=load, b=s4, out=l4);
    RAM64(in=in, load=l4, address=address[0..5], out=r4);

    And(a=load, b=s5, out=l5);
    RAM64(in=in, load=l5, address=address[0..5], out=r5);

    And(a=load, b=s6, out=l6);
    RAM64(in=in, load=l6, address=address[0..5], out=r6);

    And(a=load, b=s7, out=l7);
    RAM64(in=in, load=l7, address=address[0..5], out=r7);

    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[6..8], out=out);
}